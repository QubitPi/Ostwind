# Copyright 2024 Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: CI/CD

"on":
  pull_request:
  push:
    branches:
      - master

env:
  USER: QubitPi
  EMAIL: jack20220723@gmail.com

jobs:
  yml-md-style-and-link-checks:
    uses: QubitPi/hashicorp-aws/.github/workflows/yml-md-style-and-link-checks.yml@master

  tests:
    name: Unit & Integration Tests
    needs: yml-md-style-and-link-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: QubitPi/hashicorp-aws/.github/actions/jdk-setup@master
      - name: Run unit & integration tests
        run: mvn -B clean verify

  examples-basic-app-docker-image:
    name: Test & Release aristotle-example-basic App Docker Image
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: QubitPi/hashicorp-aws/.github/actions/jdk-setup@master
      - name: Build App WAR file so that Docker can pickup during image build
        run: mvn clean package
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Test image build
        uses: docker/build-push-action@v3
        with:
          context: athena-examples/athena-example-books
          push: false
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: jack20191124
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          context: athena-examples/athena-example-books
          push: true
          tags: jack20191124/athena-example-books:latest

  acceptance-tests:
    name: Run example acceptance tests
    needs: examples-basic-app-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: QubitPi/hashicorp-aws/.github/actions/jdk-setup@master
      - name: Package up WAR
        run: mvn clean package
      - name: Start Book example application Docker Compose
        run: docker compose up &
        working-directory: athena-examples/athena-example-books
      - name: Wait until Docker Compose is up
        run: |
          npm install -g wait-on
          wait-on http://localhost:8080
      - name: Run acceptance tests
        run: mvn clean verify -P acceptance-test

  documentation:
    name: Test Documentation Build & Deploy Documentation to GitHub Pages
    needs: acceptance-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up JDK
        uses: QubitPi/hashicorp-aws/.github/actions/jdk-setup@master
      - name: Install dependencies
        run: yarn
        working-directory: docs
      - name: Build website
        run: yarn build
        working-directory: docs
      - name: Generate Javadoc
        run: mvn -B clean javadoc:aggregate
      - name: Move Javadoc into documentation directory
        if: github.ref == 'refs/heads/master'
        run: mv target/site/apidocs/ docs/build/apidocs/
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build
          user_name: QubitPi
          user_email: jack20220723@gmail.com

  release:
    name: Release Athena to Maven Central
    needs: acceptance-tests
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Release
        uses: QubitPi/maven-central-release-action@master
        with:
          user: QubitPi
          email: jack20220723@gmail.com
          gpg-keyname: ${{ secrets.GPG_KEYNAME }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          server-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          server-password: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
