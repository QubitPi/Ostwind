# Copyright 2024 Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: CI/CD

"on":
  pull_request:
  push:
    branches:
      - master

env:
  JDK_VERSION: 17
  JDK_DISTRIBUTION: 'adopt'
  USER: QubitPi
  EMAIL: jack20220723@gmail.com

jobs:
  tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Run unit & integration tests
        run: mvn -B clean verify

  examples-basic-app-docker-image:
    name: Test & Release ostwind-example-books App Docker Image
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Build App WAR file so that Docker can pickup during image build
        run: mvn clean package
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Test image build
        uses: docker/build-push-action@v3
        with:
          context: ostwind-examples/ostwind-example-books
          push: false
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: jack20191124
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image to DockerHub
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          context: ostwind-examples/ostwind-example-books
          push: true
          tags: jack20191124/ostwind-example-books:latest

  acceptance-tests:
    name: Run example acceptance tests
    needs: examples-basic-app-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Package up WAR
        run: mvn clean package
      - name: Start Book example application Docker Compose
        run: docker compose up &
        working-directory: ostwind-examples/ostwind-example-books
      - name: Wait until Docker Compose is up
        run: |
          npm install -g wait-on
          wait-on http://localhost:8080
      - name: Run acceptance tests
        run: mvn clean verify -P acceptance-test

  documentation:
    name: Test & Release Documentation (including Javadoc)
    needs: acceptance-tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.91.2'
      - name: Set up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: ${{ env.JDK_VERSION }}
          distribution: ${{ env.JDK_DISTRIBUTION }}
      - name: Build documentation
        run: hugo --minify
        working-directory: docs
      - name: Generate Javadoc
        run: mvn -B clean javadoc:aggregate
      - name: Move Javadoc into documentation directory
        if: github.ref == 'refs/heads/master'
        run: mv target/site/apidocs/ docs/public/apidocs/
      - name: Deploy documentation to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/public
          enable_jekyll: false
          destination_dir: ./
          keep_files: true
          user_name: QubitPi
          user_email: jack20220723@gmail.com
          cname: ostwind.qubitpi.org
          force_orphan: true

  release:
    name: Release Ostwind to Maven Central
    needs: acceptance-tests
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Release
        uses: QubitPi/maven-central-release-action@master
        with:
          user: QubitPi
          email: jack20220723@gmail.com
          gpg-keyname: ${{ secrets.GPG_KEYNAME }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          server-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          server-password: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          version-properties: version.ostwind
